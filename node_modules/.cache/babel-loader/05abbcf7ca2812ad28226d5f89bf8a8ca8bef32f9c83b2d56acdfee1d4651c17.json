{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nlet initialState = {\n  data: [],\n  status: 'idle'\n};\nexport const getProducts = createAsyncThunk('product/get', async () => {\n  let value = await fetch(\"https://fakestoreapi.com/products\");\n  let valueData = await value.json();\n  return valueData;\n});\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  // reducers: {\n  //     fetchProducts(state, action) {\n  //         state.data = action.payload\n  //     }\n  // },\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, (state, action) => {\n      state.status = 'Loading';\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = 'idle';\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.status = 'Error';\n    });\n  }\n});\nexport default productSlice.reducer;\nexport const {\n  fetchProducts\n} = productSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","status","getProducts","value","fetch","valueData","json","productSlice","name","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer","fetchProducts","actions"],"sources":["/home/abinesh/React/e-comerce/src/slice/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\nlet initialState = {\n    data: [],\n    status: 'idle',\n\n}\n\nexport const getProducts = createAsyncThunk('product/get', async () => {\n    let value = await fetch(\"https://fakestoreapi.com/products\")\n    let valueData = await value.json()\n    return valueData\n})\n\nconst productSlice = createSlice({\n    name: 'products',\n    initialState,\n    // reducers: {\n    //     fetchProducts(state, action) {\n    //         state.data = action.payload\n    //     }\n    // },\n    extraReducers: (builder) => {\n        builder.\n            addCase(getProducts.pending, (state, action) => {\n\n                state.status = 'Loading'\n            })\n            .\n            addCase(getProducts.fulfilled, (state, action) => {\n                state.data = action.payload\n                state.status = 'idle'\n            })\n            . \n            addCase(getProducts.rejected, (state, action) => {\n                state.status = 'Error'\n            })\n\n\n    }\n})\n\n\n\nexport default productSlice.reducer;\nexport const { fetchProducts } = productSlice.actions\n\n\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAGhE,IAAIC,YAAY,GAAG;EACfC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;AAEZ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,aAAa,EAAE,YAAY;EACnE,IAAIK,KAAK,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EAC5D,IAAIC,SAAS,GAAG,MAAMF,KAAK,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,SAAS;AACpB,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,UAAU;EAChBT,YAAY;EACZ;EACA;EACA;EACA;EACA;EACAU,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACHC,OAAO,CAACT,WAAW,CAACU,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAE5CD,KAAK,CAACZ,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CAEFU,OAAO,CAACT,WAAW,CAACa,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACb,IAAI,GAAGc,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACZ,MAAM,GAAG,MAAM;IACzB,CAAC,CAAC,CAEFU,OAAO,CAACT,WAAW,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACZ,MAAM,GAAG,OAAO;IAC1B,CAAC,CAAC;EAGV;AACJ,CAAC,CAAC;AAIF,eAAeM,YAAY,CAACW,OAAO;AACnC,OAAO,MAAM;EAAEC;AAAc,CAAC,GAAGZ,YAAY,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}