{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/React/e-comerce/src/classComponant.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ExampleComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n    // Method to stop the timer\n    this.stopTimer = () => {\n      clearInterval(this.interval);\n    };\n  }\n  // Increment count every second\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState(prevState => ({\n        count: prevState.count + 1\n      }));\n    }, 1000);\n  }\n\n  // Clear the interval when the component is unmounted\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopTimer,\n        children: \"Stop Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ExampleComponent","constructor","args","state","count","stopTimer","clearInterval","interval","componentDidMount","setInterval","setState","prevState","componentWillUnmount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/abinesh/React/e-comerce/src/classComponant.js"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default class ExampleComponent extends Component {\n    state = {\n        count: 0\n    };\n\n    // Increment count every second\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.setState(prevState => ({\n                count: prevState.count + 1\n            }));\n        }, 1000);\n    }\n\n    // Clear the interval when the component is unmounted\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    // Method to stop the timer\n    stopTimer = () => {\n        clearInterval(this.interval);\n    };\n\n    render() {\n        return (\n            <div>\n                <p>Count: {this.state.count}</p>\n                <button onClick={this.stopTimer}>Stop Timer</button>\n            </div>\n        );\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,MAAMC,gBAAgB,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACpDC,KAAK,GAAG;MACJC,KAAK,EAAE;IACX,CAAC;IAgBD;IAAA,KACAC,SAAS,GAAG,MAAM;MACdC,aAAa,CAAC,IAAI,CAACC,QAAQ,CAAC;IAChC,CAAC;EAAA;EAjBD;EACAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACD,QAAQ,GAAGE,WAAW,CAAC,MAAM;MAC9B,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAK;QACxBP,KAAK,EAAEO,SAAS,CAACP,KAAK,GAAG;MAC7B,CAAC,CAAC,CAAC;IACP,CAAC,EAAE,IAAI,CAAC;EACZ;;EAEA;EACAQ,oBAAoBA,CAAA,EAAG;IACnBN,aAAa,CAAC,IAAI,CAACC,QAAQ,CAAC;EAChC;EAOAM,MAAMA,CAAA,EAAG;IACL,oBACId,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,GAAG,SAAO,EAAC,IAAI,CAACX,KAAK,CAACC,KAAK;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCnB,OAAA;QAAQoB,OAAO,EAAE,IAAI,CAACd,SAAU;QAAAS,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}