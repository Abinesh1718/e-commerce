{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/React/e-comerce/src/classComponant.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class UserList extends Component {\n  constructor(props) {\n    super(props);\n    // Merge the new state with the existing state\n    this.state = {\n      userList: [],\n      date: new Date()\n    };\n    this.state = {\n      ...this.state,\n      data: new Date()\n    };\n  }\n  async componentDidMount() {\n    try {\n      const response = await fetch(\"https://fakestoreapi.com/products\");\n      const data = await response.json();\n      this.setState({\n        userList: data\n      });\n\n      // Update the date every second\n      this.timer = setInterval(() => {\n        this.tick();\n      }, 1000);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.userList.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.date.toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","UserList","constructor","props","state","userList","date","Date","data","componentDidMount","response","fetch","json","setState","timer","setInterval","tick","error","console","componentWillUnmount","clearInterval","render","children","map","user","title","fileName","_jsxFileName","lineNumber","columnNumber","price","id","toLocaleTimeString"],"sources":["/home/abinesh/React/e-comerce/src/classComponant.js"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default class UserList extends Component {\n    state = {\n        userList: [],\n        date: new Date()\n    }\n\n    constructor(props) {\n        super(props);\n        // Merge the new state with the existing state\n        this.state = { ...this.state, data: new Date() };\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetch(\"https://fakestoreapi.com/products\");\n            const data = await response.json();\n            this.setState({ userList: data });\n\n            // Update the date every second\n            this.timer = setInterval(() => {\n                this.tick();\n            }, 1000);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    {/* Iterate over userList and render each item */}\n                    {this.state.userList.map(user => (\n                        <div key={user.id}>\n                            <p>{user.title}</p>\n                            <p>{user.price}</p>\n                            {/* Render other user data as needed */}\n                        </div>\n                    ))}\n                </div>\n                {/* Render current time */}\n                <p>{this.state.date.toLocaleTimeString()}</p>\n            </>\n        );\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,eAAe,MAAMC,QAAQ,SAASL,SAAS,CAAC;EAM5CM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ;IAAA,KAPJC,KAAK,GAAG;MACJC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,IAAIC,IAAI,CAAC;IACnB,CAAC;IAKG,IAAI,CAACH,KAAK,GAAG;MAAE,GAAG,IAAI,CAACA,KAAK;MAAEI,IAAI,EAAE,IAAID,IAAI,CAAC;IAAE,CAAC;EACpD;EAEA,MAAME,iBAAiBA,CAAA,EAAG;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAMH,IAAI,GAAG,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClC,IAAI,CAACC,QAAQ,CAAC;QAAER,QAAQ,EAAEG;MAAK,CAAC,CAAC;;MAEjC;MACA,IAAI,CAACM,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC3B,IAAI,CAACC,IAAI,CAAC,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ;EAEAE,oBAAoBA,CAAA,EAAG;IACnBC,aAAa,CAAC,IAAI,CAACN,KAAK,CAAC;EAC7B;EAEAE,IAAIA,CAAA,EAAG;IACH,IAAI,CAACH,QAAQ,CAAC;MACVP,IAAI,EAAE,IAAIC,IAAI,CAAC;IACnB,CAAC,CAAC;EACN;EAEAc,MAAMA,CAAA,EAAG;IACL,oBACIvB,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACIxB,OAAA;QAAAwB,QAAA,EAEK,IAAI,CAAClB,KAAK,CAACC,QAAQ,CAACkB,GAAG,CAACC,IAAI,iBACzB1B,OAAA;UAAAwB,QAAA,gBACIxB,OAAA;YAAAwB,QAAA,EAAIE,IAAI,CAACC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB/B,OAAA;YAAAwB,QAAA,EAAIE,IAAI,CAACM;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFbL,IAAI,CAACO,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN/B,OAAA;QAAAwB,QAAA,EAAI,IAAI,CAAClB,KAAK,CAACE,IAAI,CAAC0B,kBAAkB,CAAC;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAC/C,CAAC;EAEX;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}